换资源的配置
1.一旦文件重名,将来打包时就会丢失文件
2.确保重名文件选中的是蓝色文件夹,打包后就会有全部的文件了
3.修改文件的路径(原路径失效)

保证代码值加载一次
1.多线程  dispatchOnce
2.只调用一次的方法:+(void)load;只要头文件参与了编译就会调用此方法;+(void)initialize;类的实例创建时才会调用此方法


开源库:公开源代码能看到具体实现
闭源库:不公开源代码,是经过编译后的二进制文件,看不到具体实现;主要分为:静态库,动态库
静态库和动态库的存在形式;静态库:.a和.framework;动态库:.dylib和.framework(iOS9取消了.dylib,使用.tbd代替)

静态库和动态库在使用上的区别
静态库:链接时,静态库会被完整的复制到可执行文件中,被多次使用就有多份冗余拷贝
动态库:链接时不复制,程序运行时由系统动态加载到内存,供程序调用,系统只加载一次,多个程序共用,节省内存;需要注意的是项目中如果使用了自制的动态库,不能上传到App Store

undefined symbols for architecture x86_64;原因静态库的框架不对;解决方法:检查第三方类库的架构版本
undefined symbols for architecture i386;原因:真机和模拟器也是区分多种架构的(模拟器架构:i386:4s/5;x86_64:>=5s;真机架构:armv7,armv7s,arm64);怎么查看架构:lipo -info 静态库.a ;合成多个版本架构:方式1 使用合成命令lipo -create 静态库1.a 静态库2.a -output 新静态库.a;方式2 设置编译架构为NO(只针对模拟器/真机);如果需要合并真机的所有架构以及模拟器的所有架构使用方式1合成

release和debug的区别
debug:有丰富的调试语句和代码当前模式下会输出(nslog)
release:不会有丰富的调试语句和代码,文件体积会变小,执行速度好会变快

图片资源包:如果静态库中的图像名称和项目中的资源图像名称发生重名就可能出现问题,应该使用Bundle(文件夹)

静态库边开发边调试:1.按常规创建项目;2开发静态库-->添加target;3使用时,头文件及方法正常调用.编译运行时,一定要导入.a文件;
小区别:1.如果使用此种方式进行开发,实际上静态库文件根本没有被编译,直接可以使用;2.如果要导出还需按照以前的方式进行编译.a

制作framework时默认是动态库
自己制作的动态库,在使用时,需要添加Embedded Binary,此选项的意思是将动态库的代码转换成二进制文件,此时就无关动态还是静态
动态库提交App Store时需要改为静态库;setting中搜索math-Otype,改为static
framework的静态库直接使用即可,不需要设置Embedded Binary

